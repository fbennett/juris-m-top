#+LATEX_CLASS: texMemo
#+MACRO: NOINDENT @@latex: \noindent@@
#+TITLE: MEMO
#+LATEX_HEADER: \memoto{Faculty}
#+LATEX_HEADER: \memofrom{Frank Bennett}
#+LATEX_HEADER: \memosubject{GSL English Website: Build Instructions}
#+LATEX_HEADER: \memodate{\today}
#+OPTIONS: 


* Introduction

The website of the Nagoya University Graduate School of Law is an
important information resource for applicants, students, and staff.
The website is built from text files maintained by a site editor, and
bibliographic data stored in Zotero using the Juris-M reference
manager. This document explains the procedures for setting up
the site tools on a PC, and for building the site pages.

The editorial process for site pages and bibliographic data, and
the procedures for uploading the site pages to the public website
of the Faculty, are beyond the scope of this document.

* Initial setup

The site tools can be installed on Linux, Mac OS X, and Windows,
but the procedures differ slightly for each environment.

** Linux

Under Linux, the site tools are run from a terminal window, which will
be familiar if you are a Linux user. You will also need =node.js=,
which is used to access bibliographic data and format citations. The
command to install it (on Ubuntu and most other systems) is:

#+BEGIN_QUOTE
: sudo apt-get install node.js
#+END_QUOTE

** Mac OS X

Under Mac OS X, the site tools are run from a terminal window, so
figure out how to open that. You will also need =node.js=, which is
used to access bibliographic data and format citations. It can be
installed by downloading the appropriate Mac installer from this
website:

[[https://nodejs.org/en/download/][https://nodejs.org/en/download/]]

The installer will ask that =/usr/local/bin= be included in your
=PATH=. This should already be set up, but you can check by running
this command:

#+BEGIN_QUOTE
: set | grep PATH
#+END_QUOTE

If =/usr/local/bin= is not in your path, you can add it with this
command:

#+BEGIN_QUOTE
: export PATH=$PATH:/usr/local/bin
#+END_QUOTE

** Windows

On Windows, you will need to run the site tools from a CygWin terminal
window, which provides a Unix-like environment on a Windows machine.
Install CygWin with the appropriate setup installer from this site
(note that most modern computers are "64-bit"):

[[https://cygwin.com/install.html][https://cygwin.com/install.html]]



* IDs and permissions

** GitHub ID

The site tools and the text source files for the site are stored in
public GitHub repositories. Changes to either (tools or text) /must/
be stored back into the relevant repository, because it is the
permanent record that will be used by other maintainers of the site.
To make changes to the repositories, you will need a GitHub account.
If you do not have a GitHub account, create one here before proceeding
further:

[[https://github.com][https://github.com]]

** Respository write permissions

After obtaining a GitHub ID, you will need write permissions in the
text repository. This can be granted only by the repository
administrator (Frank Bennett, as of this writing). Contact the
repository administrator and request write permissions before
proceeding further.

** Zotero API key

The site tools call a Zotero library to obtain bibliographic data, and
a "Zotero API key" is required for this purpose. The key can be
obtained only from the maintainer of the Zotero bibliography
collection of faculty publications (Frank Bennett, as of this
writing). A Zotero API key is a small file containing a random
string of letters and numbers. Save the key file in a safe place:
you will use it later to set up the site tools.

* Fetching site tools and text

We will install the repositories directly onto the PC, but they
can also be viewed online.

- Site tools ::
    The "site tools" are software scripts used to build the
    site pages.

    [[https://github.com/gsl-nagoya-u/gsl-build][https://github.com/gsl-nagoya-u/gsl-build]]

- Site content ::
    Site content is stored in a separate repository.

    [[https://github.com/gsl-nagoya-u/gsl-content][https://github.com/gsl-nagoya-u/gsl-content]]

Clone both repositories to your PC with the following
command:

#+BEGIN_QUOTE
: git clone --recursive https://github.com/gsl-nagoya-u/gsl-build.git
#+END_QUOTE

This will create a directory =gsl-build= containing the scripts,
with a subdirectory at =gsl-build/src= containing text files.

* Installing the Zotero API key

To install the Zotero API key that you obtained from the bibliography
maintainer, copy the file into the =gsl-build= directory and give
it the name =api_key.txt=:

#+BEGIN_QUOTE
: cd gsl-build
: cp /path/to/file api_key.txt
: chmod 0600 api_key.txt
#+END_QUOTE

The =chmod= command changes the permissions on the file, so that
it can be read only by your account. This is not a critical step,
since the key has read-only permissions on faculty bibliographic
data, but it is a sensible precaution.

* Building the site pages

Okay. Should these operations be put under the control of =make=? The
would require a =make= install, and =make= compatibility, which may not
be good. On the other hand, it would be much more orderly, and easier
to control build dependencies.

** Pull changes from GitHub



** =updateBibliographyData=

** =makePages=

** =makeStaffProfiles=

** =makePublicationLists=

** =generateIndex=

* Testing the site

